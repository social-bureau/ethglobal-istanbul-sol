/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IProntera, IPronteraInterface } from "../IProntera";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
    ],
    name: "getChatInitialization",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInitialization",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "userSecret",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "publicKeyPrefix",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "publicKeyX",
            type: "bytes32",
          },
        ],
        internalType: "struct IProntera.UserInitialization",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callerSecret",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "peerSecret",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "peer",
        type: "address",
      },
    ],
    name: "initializeChat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "secret",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "publicKeyPrefix",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "publicKeyX",
        type: "bytes32",
      },
    ],
    name: "initializeUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initializer",
        type: "address",
      },
      {
        internalType: "address",
        name: "peer",
        type: "address",
      },
    ],
    name: "isChatInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUserInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IProntera__factory {
  static readonly abi = _abi;
  static createInterface(): IPronteraInterface {
    return new utils.Interface(_abi) as IPronteraInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IProntera {
    return new Contract(address, _abi, signerOrProvider) as IProntera;
  }
}
