/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Prontera, PronteraInterface } from "../../core/Prontera";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "peer",
        type: "address",
      },
    ],
    name: "ChatIsNotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "peer",
        type: "address",
      },
    ],
    name: "PeerIsNotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserIsNotInitialized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initializer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "peer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callerEncryptedChatSecret",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "peerEncryptedChatSecret",
        type: "bytes",
      },
    ],
    name: "ChatInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "encryptedUserSecret",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "publicKeyPrefix",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "publicKeyX",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct IProntera.UserInitialization",
        name: "init",
        type: "tuple",
      },
    ],
    name: "UserInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "firstUser",
        type: "address",
      },
      {
        internalType: "address",
        name: "secondUser",
        type: "address",
      },
    ],
    name: "getChatInitialization",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInitialization",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encryptedUserSecret",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "publicKeyPrefix",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "publicKeyX",
            type: "bytes32",
          },
        ],
        internalType: "struct IProntera.UserInitialization",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callerEncryptedChatSecret",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "peerEncryptedChatSecret",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "peer",
        type: "address",
      },
    ],
    name: "initializeChat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encryptedUserSecret",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "publicKeyPrefix",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "publicKeyX",
        type: "bytes32",
      },
    ],
    name: "initializeUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initializer",
        type: "address",
      },
      {
        internalType: "address",
        name: "peer",
        type: "address",
      },
    ],
    name: "isChatInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUserInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806315d3af1c14610067578063210c07281461007e57806365d431eb14610092578063821a20fa146100bd5780638d8613a5146100d1578063b684fc481461010d575b600080fd5b61007c6100753660046101a1565b5050505050565b005b61007c61008c366004610222565b50505050565b6100a86100a0366004610284565b600092915050565b60405190151581526020015b60405180910390f35b6100a86100cb3660046102b7565b50600190565b6101006100df3660046102b7565b50604080516060808201835281526000602082018190529181019190915290565b6040516100b49190610326565b61012f61011b366004610284565b505060408051600081526020810190915290565b6040516100b49190610364565b919050565b60008083601f84011261015357600080fd5b50813567ffffffffffffffff81111561016b57600080fd5b60208301915083602082850101111561018357600080fd5b9250929050565b80356001600160a01b038116811461013c57600080fd5b6000806000806000606086880312156101b957600080fd5b853567ffffffffffffffff808211156101d157600080fd5b6101dd89838a01610141565b909750955060208801359150808211156101f657600080fd5b5061020388828901610141565b909450925061021690506040870161018a565b90509295509295909350565b6000806000806060858703121561023857600080fd5b843567ffffffffffffffff81111561024f57600080fd5b61025b87828801610141565b9095509350506020850135801515811461027457600080fd5b9396929550929360400135925050565b6000806040838503121561029757600080fd5b6102a08361018a565b91506102ae6020840161018a565b90509250929050565b6000602082840312156102c957600080fd5b6102d28261018a565b9392505050565b6000815180845260005b818110156102ff576020818501810151868301820152016102e3565b81811115610311576000602083870101525b50601f01601f19169290920160200192915050565b60208152600082516060602084015261034260808401826102d9565b9050602084015115156040840152604084015160608401528091505092915050565b6020815260006102d260208301846102d956fea2646970667358221220f69ed81169364a1ab1927feb1e38eb4091e93d0d15378aa6521ba0c8f38ae80264736f6c634300080e0033";

type PronteraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PronteraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Prontera__factory extends ContractFactory {
  constructor(...args: PronteraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Prontera> {
    return super.deploy(overrides || {}) as Promise<Prontera>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Prontera {
    return super.attach(address) as Prontera;
  }
  override connect(signer: Signer): Prontera__factory {
    return super.connect(signer) as Prontera__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PronteraInterface {
    return new utils.Interface(_abi) as PronteraInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Prontera {
    return new Contract(address, _abi, signerOrProvider) as Prontera;
  }
}
